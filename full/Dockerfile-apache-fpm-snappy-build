FROM schtr4jh/pckg:base
MAINTAINER schtr4jh@schtr4jh.net
COPY utils /usr/local/pckg-utils/
RUN add-apt-repository ppa:ondrej/php \
	&& add-apt-repository ppa:ondrej/apache2 \
	&& curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash - \
	&& curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \
	&& echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list \
	&& apt-get -y update \
	&& apt-get install -y mysql-client postgresql-client apache2 libapache2-mod-fcgid php php-fpm php-curl php-intl php-xml php-mbstring php-zip php-mysql php-pgsql php-cli php-amqplib php-ssh2 php-zmq php-imap php-redis php-bcmath php-gd php-bz2 php-soap php-dev wget xvfb git zip unzip php7.4-dev g++ build-essential nodejs yarn python2 \
	&& PREVDIR=$PWD \
	&& cd /tmp/ \
	&& git clone --recursive --depth=1 https://github.com/kjdev/php-ext-snappy.git \
	&& cd php-ext-snappy \
	&& phpize \
	&& ./configure \
	&& make \
	&& make install \
	&& echo "extension=snappy" >> /etc/php/7.4/cli/php.ini \
	&& cd $PREVDIR \
	&& cp /usr/local/pckg-utils/external/etc_apache2_apache2-fpm.conf /etc/apache2/apache2.conf \
	&& cp /usr/local/pckg-utils/external/000-default-fpm.conf /etc/apache2/sites-enabled/000-default.conf \
	&& mkdir -p /etc/ssl/private/ \
	&& cp /usr/local/pckg-utils/external/apache-selfsigned.crt /etc/ssl/certs/apache-selfsigned.crt \
	&& cp /usr/local/pckg-utils/external/apache-selfsigned.key /etc/ssl/private/apache-selfsigned.key \
	&& a2enmod expires headers rewrite ssl proxy_fcgi \
	&& a2enconf php7.4-fpm \
	&& php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');" \
	&& php -r "if (hash_file('sha384', 'composer-setup.php') === '756890a4488ce9024fc62c56153228907f1545c228516cbf63f885e036d37e9a59d27d63f46af1d4d07ee0f76181c7d3') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;" \
	&& php composer-setup.php \
	&& php -r "unlink('composer-setup.php');" \
	&& mv composer.phar /usr/local/bin/composer \
	&& npm install -g npm less webpack webpack-cli \
	&& rm -rf /var/lib/apt/lists/* \
	&& rm -rf /usr/local/pckg-utils
WORKDIR /var/www/html/
COPY docker-entrypoint-apache-fpm8.sh /
ENTRYPOINT ["sh", "/docker-entrypoint-apache-fpm8.sh"]