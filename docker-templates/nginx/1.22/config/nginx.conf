server {
    listen 80 default_server;
    listen [::]:80 default_server;

    # Server domains
    # server_name domain.com;
    server_name _;

    # Document root
    root /var/www/html/;

    # Cookie-less static domain
    fastcgi_hide_header Set-Cookie;

    # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
    add_header Strict-Transport-Security "max-age=15768000; preload; includeSubDomains" always;

    gzip on;
    gzip_min_length 1000;
    gzip_disable "msie6";

    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_proxied any;
    gzip_types
    text/plain
    text/css
    text/js
    text/xml
    text/javascript
    application/javascript
    application/json
    application/xml
    application/rss+xml
    image/svg+xml;

    gunzip on;

    # Because nginx will serve only specific file types we disable access.
    location / {
#        deny all;
    }

    # Healthcheck?
    location /robots.txt {
        return 200 'User-Agent: *\nDisallow: ';
        add_header Content-Type text/plain;
    }

    # Nginx will serve only files from ./htdocs/storage/ directory.
    # We deny all by default and allow only static files.
    location /storage/ {
        deny all;

        location ~* "\.(jpg|jpeg|gif|png|webp|css|js|ico|ttf|woff|woff2|otf)$" {
            allow all;
            expires 12M;
            access_log off;
            add_header Cache-Control "public, max-age=2592000";
            add_header Access-Control-Allow-Origin *;

            try_files $uri =404;
        }

        return 403;
    }

    location /build/ {
        deny all;

        location ~* "\.(jpg|jpeg|gif|png|webp|css|js|ico|ttf|woff|woff2|otf)$" {
            allow all;
            expires 2M;
            access_log off;
            add_header Cache-Control "public, max-age=2592000";
            add_header Access-Control-Allow-Origin *;

            try_files $uri =404;
        }

        return 403;
    }

}
